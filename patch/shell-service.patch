diff -uprN sample_shim.orig/Android.bp sample_shim/Android.bp
--- sample_shim.orig/Android.bp	2022-12-26 15:11:18.138799867 +0800
+++ sample_shim/Android.bp	2022-12-26 15:14:51.837836756 +0800
@@ -97,3 +97,11 @@ cc_binary {
     init_rc: ["config/android.hardware.neuralnetworks-shim-service-sample.rc"],
     vintf_fragments: ["config/android.hardware.neuralnetworks-shim-service-sample.xml"],
 }
+
+cc_binary {
+    name: "android.hardware.neuralnetworks-shell-service-sample",
+    srcs: ["ShellServiceSample.cpp"],
+    defaults: ["NeuralNetworksShimDriverAidl_server_defaults"],
+    init_rc: ["config/android.hardware.neuralnetworks-shell-service-sample.rc"],
+    vintf_fragments: ["config/android.hardware.neuralnetworks-shell-service-sample.xml"],
+}
diff -uprN sample_shim.orig/ShellServiceSample.cpp sample_shim/ShellServiceSample.cpp
--- sample_shim.orig/ShellServiceSample.cpp	2022-12-26 15:11:18.138799867 +0800
+++ sample_shim/ShellServiceSample.cpp	2022-12-26 15:14:04.702027723 +0800
@@ -34,7 +34,6 @@
 #include <utility>
 #include <vector>
 
-typedef struct NnApiSLDriverImpl NnApiSLDriverImpl;
 
 namespace aidl::android::hardware::neuralnetworks {
 namespace {
@@ -123,10 +122,10 @@ using aidl::android::hardware::neuralnet
 using aidl::android::hardware::neuralnetworks::registerDevices;
 
 int main() {
-    const std::string driverPath = "/vendor/lib64/neuralnetworks_sample_sl_driver_prebuilt.so";
+    const std::string driverPath = "/vendor/lib64/libVsiSupportLibrary.so";
 
     const std::vector<Names> devicesToRegister = {
-            {.driverName = "nnapi-sample_sl", .serviceName = "nnapi-sample_sl_updatable"},
+            {.driverName = "vsi-device-0", .serviceName = "nnapi-sample_sl_updatable"},
     };
 
     return registerDevices(driverPath, devicesToRegister);
